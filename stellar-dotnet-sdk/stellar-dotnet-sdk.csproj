<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Version>2.1.0</Version>
    <ApplicationIcon />
    <OutputType>Library</OutputType>
    <StartupObject />
    <RootNamespace>stellar_dotnet_sdk</RootNamespace>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>The .NET Stellar SDK facilitates client integration with the Stellar Horizon API server and submission of Stellar transactions. It has two main uses: querying Horizon and building, signing, and submitting transactions to the Stellar network.</Description>
    <PackageId>Swisschain.stellar-dotnet-sdk</PackageId>
    <PackageLicense>sss</PackageLicense>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <Copyright>elucidsoft 2018</Copyright>
    <PackageProjectUrl>https://github.com/elucidsoft/dotnet-stellar-sdk</PackageProjectUrl>
    <RepositoryUrl>https://github.com/elucidsoft/dotnet-stellar-sdk</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>'.NET Core' 'Stellar' 'Horizon' 'Blockchain' 'Crypto' 'Distributed Ledger'</PackageTags>
    <ReleaseNotes>https://github.com/elucidsoft/dotnet-stellar-sdk/releases</ReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="dotnetstandard-bip32" Version="1.0.0" />
    <PackageReference Include="dotnetstandard-bip39" Version="1.0.2" />
    <PackageReference Include="LaunchDarkly.EventSource" Version="3.3.2" />
    <PackageReference Include="Nett" Version="0.10.0" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.1" />
    <PackageReference Include="NSec.Cryptography" Version="19.5.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\LICENSE.txt" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\stellar-dotnet-sdk-xdr\stellar-dotnet-sdk-xdr.csproj" />
  </ItemGroup>

  <!--
    The following solves the problem that 'dotnet pack' does not include the DLLs from referenced projects.
    See https://github.com/NuGet/Home/issues/3891 for a description of the problem
    and for newer versions / workarounds / built-in methods.
  -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>
      $(TargetsForTfmSpecificBuildOutput);PackReferencedProjectOutputs
    </TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="PackReferencedProjectOutputs" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>
</Project>
